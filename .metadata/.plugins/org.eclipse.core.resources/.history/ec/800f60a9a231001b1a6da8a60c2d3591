package com.douineau.testspringboot.model.security;

import java.util.List;

import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;

import com.douineau.testspringboot.model.AbstractEntity;

@Entity
public class Authority extends AbstractEntity {

	private String role;
	private boolean isAccNonExpired;
	private boolean isAccNonLocked;
	private boolean isCredNonExpired;
	private boolean isEnabled;

	@ManyToMany
	@JoinTable(
			joinColumns = @JoinColumn(name = "authority_id"), 
			inverseJoinColumns = @JoinColumn(name = "user_id")
			)
	private List<User> users;

	public Authority() {
		super();
	}

	public String getRole() {
		return role;
	}

	public void setRole(String role) {
		this.role = role;
	}

	public List<User> getUsers() {
		return users;
	}

	public void setUsers(List<User> users) {
		this.users = users;
	}

	public boolean isAccNonExpired() {
		return isAccNonExpired;
	}

	public void setAccNonExpired(boolean isAccNonExpired) {
		this.isAccNonExpired = isAccNonExpired;
	}

	public boolean isAccNonLocked() {
		return isAccNonLocked;
	}

	public void setAccNonLocked(boolean isAccNonLocked) {
		this.isAccNonLocked = isAccNonLocked;
	}

	public boolean isCredNonExpired() {
		return isCredNonExpired;
	}

	public void setCredNonExpired(boolean isCredNonExpired) {
		this.isCredNonExpired = isCredNonExpired;
	}

	public boolean isEnabled() {
		return isEnabled;
	}

	public void setEnabled(boolean isEnabled) {
		this.isEnabled = isEnabled;
	}

	@Override
	public String toString() {
		return "Authority [role=" + role + ", isAccNonExpired=" + isAccNonExpired + ", isAccNonLocked=" + isAccNonLocked
				+ ", isCredNonExpired=" + isCredNonExpired + ", isEnabled=" + isEnabled + ", users=" + users + "]";
	}

	
	
}
